/** **************************************************************************
 * FRANCA TYPICAL SET-UP: AUTOMOTIVE/INFOTAINMENT
 *
 * 2011-11-25 kbirken, initial version
 * 2013-10-23 kbirken, major update
 * 2018-11-15 kbirken, major update
 *
 * ************************************************************************** */
 
// relative path for generation of diagrams from this model
generate_to = "../src/images-gen"


// **************************************************************************

// the Common IDL eval environment
plugin org.franca.examples.genivi

// the Franca plugins
plugin org.franca.core
plugin org.franca.generators

// DBus Introspection IDL
plugin model.emf.dbusxml
plugin dbus_generators_somewhere
plugin org.franca.connectors.dbus

// Google Protobuf
plugin protobuf_dt // com.google.eclipse.protobuf
//plugin protobuf_generators_somewhere
plugin org.franca.connectors.protobuf

// OMG IDL (aka CORBA)
plugin idl4emf // org.csu.idl
//plugin omgidl_generators_somewhere
plugin org.franca.connectors.omgidl

// UML integration (Yamaica...)
plugin some.uml.ea.bridge

// WebIDL
//plugin org.franca.connectors.webidl

// DSI IDL
//plugin com.harmanbecker.sys.dsi.model.internal
//plugin com.harman.sys.dsi.generators
//plugin org.franca.connectors.dsi

// FIBEX Services
plugin ics.lipci.metamodels.fibex
plugin org.franca.connectors.fibex

// AUTOSAR Classic/Adaptive
plugin org.autosar.model
plugin org.franca.connectors.autosar

// ROOM / eTrice integration 
//plugin org.eclipse.etrice.core.room
//plugin org.eclipse.etrice.generator
//plugin org.franca.connectors.etrice

// CommonAPI
plugin org.genivi.commonapi.core
plugin org.genivi.commonapi.dbus
plugin org.genivi.commonapi.someip
plugin org.genivi.commonapi.wamp
plugin org.genivi.commonapi.proprietary

// some unknown generators
plugin some.unknown.generators

// some proprietary models and transformations
plugin some.proprietary.models


// **************************************************************************

model Franca_IDL {
	purpose "Central IDL model - base for generators and common IDL"
	file franca.ecore
	in org.franca.core
}

model DBus_IDL {
	purpose "D-Bus Introspection XML"
	file introspec.ecore
	in model.emf.dbusxml
}

model OMG_IDL {
	purpose "OMG IDL (aka CORBA)"
	file IDLMM.ecore
	in idl4emf
}

model Protobuf {
	purpose "Google Protobuf"
	file Protobuf.ecore
	in protobuf_dt
}

model UML_EA {
	purpose "EA UML (with profile)"
	file bridge_to_EA
	in some.uml.ea.bridge
}

//model WebIDL {
//	purpose "W3C WebIDL"
//	file org.waml.w3c.webidl
//	in org.franca.connectors.webidl
//}

//model DSI_IDL {
//	purpose "DSI IDL (hbsi format)"
//	file serviceinterface.ecore
//	in com.harmanbecker.sys.dsi.model.internal
//}

//model ROOM_IDL {
//	purpose "ROOM model (eTrice format)"
//	file serviceinterface.ecore
//	in org.eclipse.etrice.core.room
//}


// **************************************************************************

//model FIBEX_IDL {
//	purpose "FIBEX IDL (Ethernet-based subset)"
//	file fbex.ecore
//	in ics.lipci.metamodels.fibex
//}

model FIBEX_Services {
	purpose "FIBEX Services XML"
	file services.ecore
	in ics.lipci.metamodels.fibex
}

//model FIBEX_IT {
//	purpose "FIBEX IT"
//	file it.ecore
//	in ics.lipci.metamodels.fibex
//}
//
//model FIBEX_XML {
//	purpose "FIBEX XML"
//	file xml.ecore
//	in ics.lipci.metamodels.fibex
//}


// **************************************************************************

model AUTOSAR {
	purpose "AUTOSAR Classic/Adaptive"
	file autosar.ecore
	in org.autosar.model
}

// **************************************************************************

model ProprietaryModel {
	purpose "OEM Proprietary Model"
	file autosar.ecore
	in some.proprietary.models
}

// **************************************************************************

transformation DBus2FrancaTrafo {
	source DBus_IDL
	target Franca_IDL
	in org.franca.connectors.dbus
	reverse Franca2DBusTrafo
}

transformation Protobuf2FrancaTrafo {
	source Protobuf
	target Franca_IDL
	in org.franca.connectors.protobuf
	//reverse Franca2ProtobufTrafo
}

transformation OMGIDLFrancaTrafo {
	source OMG_IDL
	target Franca_IDL
	in org.franca.connectors.omgidl
	//reverse Franca2OMGIDLTrafo
}

transformation UML2FrancaTrafo {
	source UML_EA
	target Franca_IDL
	in some.uml.ea.bridge
	reverse Franca2UMLTrafo
}

//transformation WebIDL2FrancaTrafo {
//	source WebIDL
//	target Franca_IDL
//	in org.franca.connectors.webidl
//	reverse Franca2WebIDLTrafo
//}

//transformation DSI2FrancaTrafo {
//	source DSI_IDL
//	target Franca_IDL
//	in org.franca.connectors.dsi
//	reverse Franca2DSITrafo
//}

transformation FIBEX2FrancaTrafo {
	source FIBEX_Services
	target Franca_IDL
	in org.franca.connectors.fibex
	reverse Franca2FIBEXTrafo
}

transformation ARClassic2FrancaTrafo {
	source AUTOSAR
	target Franca_IDL
	in org.franca.connectors.autosar
	reverse Franca2ARClassicTrafo
}

transformation ARAdaptive2FrancaTrafo {
	source AUTOSAR
	target Franca_IDL
	in org.franca.connectors.autosar
	reverse Franca2ARAdaptiveTrafo
}

//transformation Franca2ETriceTrafo {
//	source Franca_IDL
//	target ROOM_IDL
//	in org.franca.connectors.etrice
//}

transformation Proprietary2FrancaTrafo {
	source ProprietaryModel
	target Franca_IDL
	in some.proprietary.models
	reverse Franca2ProprietaryTrafo
}


// **************************************************************************

generator CommonAPI_Cpp {
	source Franca_IDL
	output "CommonAPI C++"
	in org.genivi.commonapi.core
}

generator CommonAPI_Cpp_DBus {
	source Franca_IDL
	output "CAPI D-Bus binding"
	in org.genivi.commonapi.dbus
}

generator CommonAPI_Cpp_SOMEIP {
	source Franca_IDL
	output "CAPI SOME/IP binding"
	in org.genivi.commonapi.someip
}

generator CommonAPI_Cpp_WAMP {
	source Franca_IDL
	output "CAPI WAMP binding"
	in org.genivi.commonapi.wamp
}

generator CommonAPI_Cpp_Proprietary {
	source Franca_IDL
	output "CAPI Propr. binding"
	in org.genivi.commonapi.proprietary
}

//generator FrancaAPI_Java {
//	source Franca_IDL
//	output "Java API for Franca"
//	in org.franca.generators
//}

generator FrancaAPI_WAMP {
	source Franca_IDL
	output "HTML5 UIs: JS/WAMP"
	in org.franca.generators
}

generator FrancaAPI_joynr {
	source Franca_IDL
	output "JS/Java, joynr platform"
	in some.unknown.generators
}

//generator FrancaAPI_Cpp {
//	source Franca_IDL
//	output "C++ API for Franca"
//	in org.franca.generators
//}

//generator FrancaAPI_SOME_IP {
//	source Franca_IDL
//	output "SOME/IP binding for Franca"
//	in some.unknown.generators
//}

//generator INC_Cpp_Binding {
//	source Franca_IDL
//	output "INC/C++ Binding"
//	in org.franca.generators
//}

generator FrancaAPI_HTML {
	source Franca_IDL
	output "HTML documentation for API"
	in org.franca.generators
}


//generator DSI_API_MoCCA {
//	source DSI_IDL
//	output "MoCCA/C++ API for DSI"
//	in com.harman.sys.dsi.generators
//}
//
//generator DBus_Qt_Binding {
//	source DBus_IDL
//	output "Qt binding for DBus APIs"
//	in dbus_generators_somewhere
//}

//generator ROOM_Projects {
//	source ROOM_IDL
//	output "Java/C/C++ code for executable eTrice models"
//	in org.eclipse.etrice.generator
//}



// **************************************************************************
